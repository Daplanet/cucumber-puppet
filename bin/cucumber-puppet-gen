#!/usr/bin/env ruby

require 'rubygems'
require 'cucumber-puppet'
require 'templater'

module CucumberPuppetGenerators

  extend Templater::Manifold

  class FeatureGenerator < Templater::Generator
    def source_root
      File.join(File.dirname(__FILE__), '..', 'lib', 'generators', 'feature')
    end

    desc <<-DESC
      Generate a cucumber feature.
        cucumber-puppet-gen feature <module-name> <feature-name>
    DESC

    first_argument :mod, :required => true, :desc => "Module name"
    second_argument :feature, :required => true, :desc => "Feature name"

    # figure out destination path according to puppet directory naming
    # convention
    cwd = Dir.getwd
    template :feature do |template|
      # default assumption: <puppetdir>
      destdir = "features/modules/#{mod}"

      if not cwd.match("features/")
        # assume: not <puppetdir>/features/...
        if cwd.match("modules$")
          # assume: <puppetdir>/modules
          destdir = "#{mod}/features"
        elsif cwd.match("modules/#{mod}$")
          # assume: <puppetdir>/modules/$mod
          destdir = "features"
        elsif cwd.match("modules/#{mod}/features$")
          # assume: <puppetdir>/modules/$mod/features
          destdir = "."
        end
      end
      if cwd.match("features$") and not cwd.match("modules/")
        # assume: <puppetdir>/features
        destdir = "modules/#{mod}"
      elsif cwd.match("features/modules$") and not cwd.match("modules/")
        # assume: <puppetdir>/features/modules
        destdir = mod
      elsif cwd.match("features/modules/#{mod}$")
        # assume: <puppetdir>/features/modules/$mod
        destdir = "."
      end

      template.source = "%feature_name%.feature"
      template.destination = "#{destdir}/#{feature}.feature"
    end
  end

  class TestcaseGenerator < Templater::Generator
    def source_root
      File.join(File.dirname(__FILE__), '..', 'lib', 'generators', 'testcase')
    end

    desc <<-DESC
      Generate a test case for cucumber-puppet's test suite
        cucumber-puppet-gen testcase
    DESC

    file('testcase.feature', 'testcase.feature', 'features/testcase.feature')
    file('testcase.rb', 'testcase.rb', 'features/support/testcase.rb')
    file('site.pp', 'site.pp')
  end

  class WorldGenerator < Templater::Generator
    def source_root
      File.join(File.dirname(__FILE__), '..', 'lib', 'generators', 'world')
    end


    desc <<-DESC
      Generate cucumber step and support files.
        cucumber-puppet-gen world
    DESC

    first_argument :version, :required => false, :desc => "Puppet version"

    template :version do |template|
      template.source = "support/world.rb"
      template.destination = "features/support/world.rb"
    end

    directory('steps', 'steps', 'features/steps')
    file('hooks.rb', 'support/hooks.rb', 'features/support/hooks.rb')
  end

  desc "Generators for cucumber-puppet"
  add :feature, FeatureGenerator
  add :testcase, TestcaseGenerator
  add :world, WorldGenerator

end

CucumberPuppetGenerators.run_cli Dir.pwd, 'cucumber-puppet-gen', CucumberPuppet::VERSION, ARGV
